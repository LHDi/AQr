{"version":3,"sources":["fragments/Camera/CSS/cameraControle.module.css","fragments/Camera/CameraControle.js","fragments/Camera/index.js","fragments/Display/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Select","children","onChange","value","useState","valueState","setValueState","className","Style","map","child","props","key","newProps","Option","Selected","join","onClick","CameraListControle","cameraList","selectedCameraId","selectCamera","length","select","e","cam","deviceId","label","StreamResControle","constraints","selectedConstraint","selectConstraint","findIndex","width","res","i","CameraControle","streamProps","cameraProps","isOpen","setIsOpen","container","Open","Close","style","display","maxWidth","collapse","svg","viewBox","fill","d","window","adapter","require","resList","getConstraints","height","filter","min","max","cameraReducer","type","id","list","streamReducer","stream","permitted","newstream","newConstraints","newSelectedConstraint","getVideoTracks","applyConstraints","Camera","useReducer","dispatchCamera","dispatchStream","error","setError","reset","useCallback","getTracks","forEach","t","stop","useEffect","a","navigator","mediaDevices","enumerateDevices","camList","dev","kind","camObject","push","getCameraList","SelectedCamera","undefined","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","video","exact","getCapabilities","defaultConstraints","getSettings","Error","getCameraPermission","message","Display","crop","isCrop","setIsCrop","isStreamPortrait","setIsStreamPortrait","videoStyle","setVideoStyle","monitor","useRef","videoTrack","useLayoutEffect","isMonitorPortrait","innerHeight","innerWidth","left","transform","top","getDisplayStyle","current","srcObject","Object","assign","position","overflow","ref","autoPlay","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc342bde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cameraControle_container__zJKGL\",\"collapse\":\"cameraControle_collapse__1djfp\",\"Select\":\"cameraControle_Select__2PnWr\",\"Option\":\"cameraControle_Option__HY9Lq\",\"Selected\":\"cameraControle_Selected__28xc7\",\"Open\":\"cameraControle_Open__mzjVl\",\"Close\":\"cameraControle_Close__3dtcD\",\"svg\":\"cameraControle_svg__1odyM\"};","import React, {useState} from 'react';\nimport Style from './CSS/cameraControle.module.css';\n\nconst Select = ({children, onChange, value}) => {\n\tconst [valueState, setValueState] = useState(value);\n\treturn (\n\t\t<div className={Style.Select}>\n\t\t\t{\n\t\t\t\tchildren.map((child) => {\n\t\t\t\t\tconst {props, key} = child;\n\t\t\t\t\tconst newProps = {...props};\n\t\t\t\t\tnewProps.className = props.value === valueState ? [Style.Option, Style.Selected].join(' ') : Style.Option;\n\t\t\t\t\tnewProps.onClick = () => {\n\t\t\t\t\t\tsetValueState(props.value);\n\t\t\t\t\t\tonChange(props.value);\n\t\t\t\t\t}\n\t\t\t\t\treturn <span key={key} {...newProps}>{props.children}</span>;\n\t\t\t\t})\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nconst CameraListControle = ({cameraList, selectedCameraId, selectCamera}) => {\n\tif(!cameraList.length) return null;\n\treturn (\n\t\t<Select className={Style.select} value={selectedCameraId} onChange={e => selectCamera(e)}>\n\t\t\t{cameraList.map(cam => {\t\t\t\t\t\n\t\t\t\treturn <option key={cam.deviceId} value={cam.deviceId}>{cam.label}</option>\n\t\t\t})}\n\t\t</Select>\n\t);\n}\n\nconst StreamResControle = ({constraints, selectedConstraint, selectConstraint}) => {\n\tif(!constraints.length) return null;\n\treturn (\n\t\t<Select className={Style.select} value={constraints.findIndex(e => e.width===selectedConstraint.width)} onChange={e => selectConstraint(constraints[e])}>\n\t\t\t{constraints.map((res, i) => {\t\t\t\t\t\n\t\t\t\treturn <option key={res.label} value={i}>{res.label}</option>\n\t\t\t})}\n\t\t</Select>\n\t);\n}\n\nconst CameraControle = ({streamProps, cameraProps}) => {\n\tconst [isOpen, setIsOpen] = useState(false);\n\treturn (\n\t\t<div className={[Style.container, isOpen?Style.Open:Style.Close].join(' ')}>\n\t\t\t<div style={{display: 'inline-block', maxWidth: '100%'}}>\n\t\t\t\t<CameraListControle {...cameraProps}/>\n\t\t\t\t<StreamResControle {...streamProps}/>\n\t\t\t</div>\n\t\t\t<span className={Style.collapse} onClick={() => setIsOpen(!isOpen)}>\n\t\t\t\t{\n\t\t\t\t\tisOpen?\n\t\t\t\t\t<svg className={Style.svg} viewBox=\"0 0 20 20\">\n\t\t\t\t\t\t<path fill=\"none\" d=\"M8.388,10.049l4.76-4.873c0.303-0.31,0.297-0.804-0.012-1.105c-0.309-0.304-0.803-0.293-1.105,0.012L6.726,9.516c-0.303,0.31-0.296,0.805,0.012,1.105l5.433,5.307c0.152,0.148,0.35,0.223,0.547,0.223c0.203,0,0.406-0.08,0.559-0.236c0.303-0.309,0.295-0.803-0.012-1.104L8.388,10.049z\"></path>\n\t\t\t\t\t</svg>:\n\t\t\t\t\t<svg className={Style.svg} viewBox=\"0 0 20 20\">\n\t\t\t\t\t\t<path fill=\"none\" d=\"M11.611,10.049l-4.76-4.873c-0.303-0.31-0.297-0.804,0.012-1.105c0.309-0.304,0.803-0.293,1.105,0.012l5.306,5.433c0.304,0.31,0.296,0.805-0.012,1.105L7.83,15.928c-0.152,0.148-0.35,0.223-0.547,0.223c-0.203,0-0.406-0.08-0.559-0.236c-0.303-0.309-0.295-0.803,0.012-1.104L11.611,10.049z\"></path>\n\t\t\t\t\t</svg>\n\t\t\t\t}\n\t\t\t</span>\n\t\t</div>\n\t)\n}\n\nexport default CameraControle;\n","import React, { useState, useEffect, useCallback, useReducer } from 'react';\nimport CameraControle from './CameraControle';\n\nwindow.adapter = require('webrtc-adapter');\n\nconst resList = [\n\t[640, 480, '480p - 4:3'],\n\t[1280, 720, '720p - 16:9'],\n\t[1920, 1080, '1080p - 16:9']\n];\n\nconst getConstraints = ({height, width}) => {\n\tconst filtredRes = resList.filter((res) => (\n\t\tres[0] >= width.min && res[0] <= width.max\n\t\t&& res[1] >= height.min && res[1] <= height.max\n\t));\n\treturn filtredRes.map(res => ({\n\t\tlabel: res[2],\n\t\twidth: res[0],\n    height: res[1]\n\t}))\n};\n\nfunction hasGetUserMedia() {\n  return !!(\n    (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) ||\n    navigator.webkitGetUserMedia ||\n    navigator.mozGetUserMedia ||\n    navigator.msGetUserMedia\n  );\n};\n\nconst cameraReducer = ({cameraList, selectedCameraId}, {type, id, list}) => {\n\tswitch (type) {\n\t\tcase 'SET_LIST':\n\t\t\treturn {cameraList: list, selectedCameraId: list[0].deviceId};\n\t\tcase 'SELECT':\n\t\t\treturn {cameraList: [...cameraList], selectedCameraId: id};\n\t\tdefault:\n\t\t\treturn {cameraList: [...cameraList], selectedCameraId};\n\t}\n}\n\nconst streamReducer = ({stream, constraints, permitted, selectedConstraint}, {type, newstream, newConstraints, newSelectedConstraint}) => {\n\tswitch (type) {\n\t\tcase 'SET_STREAM':\n\t\t\treturn {stream: newstream, permitted: true, constraints: newConstraints, selectedConstraint: newSelectedConstraint};\n\t\tcase 'SET_STREAM_CONS':\n\t\t\tstream.getVideoTracks()[0].applyConstraints({...newSelectedConstraint})\n\t\t\treturn {stream, permitted, constraints, selectedConstraint: newSelectedConstraint};\n\t\tcase 'RESET_STREAM':\n\t\t\treturn {stream: null, permitted: false, constraints: [], selectedConstraint: null};\n\t\tdefault:\n\t\t\treturn {stream, permitted, constraints, selectedConstraint};\n\t}\n}\n\nconst Camera = ({children}) => {\n\tconst [{selectedCameraId, cameraList}, dispatchCamera] = useReducer(cameraReducer, {cameraList: [], selectedCameraId: null});\n\tconst [{stream, permitted, constraints, selectedConstraint}, dispatchStream] = useReducer(streamReducer, {stream: null, permitted: false, constraints: [], selectedConstraint: null});\n\tconst [error, setError] = useState(null);\n\t\n\tconst reset = useCallback(() => {\n\t\tsetError(null);\n\t\tif(stream)\n\t\t\tstream.getTracks().forEach(t => t.stop());\n\t}, [stream]);\n\n\tuseEffect(() => {\n\t\tconst getCameraList = async () => {\n\t\t\tif('mediaDevices' in navigator && 'enumerateDevices' in navigator.mediaDevices) {\n\t\t\t\ttry {\n\t\t\t\t\tconst list = await navigator.mediaDevices.enumerateDevices();\n\t\t\t\t\tlet camList = [];\n\t\t\t\t\tlist.forEach(dev => {\n\t\t\t\t\t\tif(dev.kind === 'videoinput'){\n\t\t\t\t\t\t\tconst camObject = {label: dev.label, deviceId: dev.deviceId};\n\t\t\t\t\t\t\tcamList.push(camObject);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\tdispatchCamera({type: 'SET_LIST', list: camList});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tsetError(error);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tgetCameraList();\n\t}, [permitted]);\n\n\tuseEffect(() => {\n\t\treset()\n\t\tconst SelectedCamera = (!!cameraList.length && selectedCameraId) ? selectedCameraId:undefined;\n\t\t\n\t\tif(!SelectedCamera) return;\n\t\tconst getCameraPermission = async () => {\n\t\t\tif(hasGetUserMedia() && !!SelectedCamera){\n\t\t\t\ttry {\n\t\t\t\t\tconst stream = await navigator.mediaDevices.getUserMedia({\n\t\t\t\t\t\tvideo: {\n\t\t\t\t\t\t\tdeviceId: {\n\t\t\t\t\t\t\t\texact: SelectedCamera\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tconst constraints = !!stream.getTracks()[0].getCapabilities ? getConstraints(stream.getTracks()[0].getCapabilities()) : [];\n\t\t\t\t\tconst defaultConstraints = !!stream.getTracks()[0].getSettings ? stream.getTracks()[0].getSettings() : null;\t\t\t\t\t\n\t\t\t\t\tdispatchStream({type: 'SET_STREAM', newstream: stream, newConstraints: constraints, newSelectedConstraint: defaultConstraints});\n\t\t\t\t} catch (error) {\n\t\t\t\t\tsetError(error);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn setError(new Error('No camera device was found!'));\n\t\t\t};\n\t\t};\n\t\tgetCameraPermission();\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, [selectedCameraId, cameraList.length]);\n\n\tif(!!error) \n\t\treturn (<span>{error.message}</span>)\n\treturn (\n\t\t<>\n\t\t\t<CameraControle\n\t\t\t\tcameraProps={{cameraList, selectedCameraId, selectCamera: (id) => dispatchCamera({type: 'SELECT', id})}}\n\t\t\t\tstreamProps={{constraints, selectedConstraint, selectConstraint: (newSelectedConstraint) => dispatchStream({type: 'SET_STREAM_CONS', newSelectedConstraint})}}\n\t\t\t/>\n\t\t\t{children({stream})}\n\t\t</>\n\t);\n}\n\nexport default Camera;\n","import React, { useState, useEffect, useLayoutEffect, useRef } from 'react';\n\nconst getDisplayStyle = (crop, isStreamPortrait, isMonitorPortrait) => {\n\treturn !isMonitorPortrait?\n\t\tcrop?\n\t\t\t{width: '100%', top: '50%', transform: 'translateY(-50%)'}:\n\t\t\t{height: '100%', left: '50%', transform: 'translateX(-50%)'}:\n\t\tcrop?\n\t\t\t{height: '100%', left: '50%', transform: 'translateX(-50%)'}:\n\t\t\t{width: '100%', top: '50%', transform: 'translateY(-50%)'};\n}\n\nconst Display = ({stream, style, crop}) => {\n\tconst [isCrop, setIsCrop] = useState(crop);\n\tconst [isStreamPortrait, setIsStreamPortrait] = useState(null);\n\tconst [videoStyle, setVideoStyle] = useState(null);\n\tconst monitor = useRef(null);\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\tuseEffect(() => {\n\t\tif(!stream) return;\t\t\n\t\tconst videoTrack = stream ? stream.getVideoTracks()[0].getSettings() : null;\n\t\tlet isStreamPortrait = videoTrack.height > videoTrack.width ? true : false;\n\t\tsetIsStreamPortrait(isStreamPortrait);\n\t})\n\tuseLayoutEffect(() => {\n\t\tif(!stream) return;\n\t\tlet isMonitorPortrait = window.innerHeight > window.innerWidth ? true : false;\n\t\tsetVideoStyle(getDisplayStyle(isCrop, isStreamPortrait, isMonitorPortrait))\n\t\tmonitor.current.srcObject = stream;\n\t}, [isCrop, isStreamPortrait, stream]);\n\treturn (\n\t\t<div style={Object.assign({position: 'absolute', width: '100%', height: '100%', overflow: 'hidden'}, style)}>\n\t\t\t<video ref={monitor} autoPlay style={Object.assign({}, videoStyle, { position: 'absolute' })}></video>\n\t\t\t<span style={{position: \"absolute\"}} onClick={()=>setIsCrop(!isCrop)}>{isCrop?'uncrop':'crop'}</span>\n\t\t</div>\n\t);\n}\n\nexport default Display;\n","import React from 'react';\nimport './App.css';\nimport Camera from './fragments/Camera';\nimport Display from './fragments/Display';\n\nfunction App() {\n\n  return (\n\t\t<>\n\t\t\t<Camera>\n\t\t\t\t{({stream}) => (\n\t\t\t\t\t<Display stream={stream} crop/>\n\t\t\t\t)}\n\t\t\t</Camera>\n\t\t</>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}